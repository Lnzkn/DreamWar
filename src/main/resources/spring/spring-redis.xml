<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Caching Levels -->
    <context:component-scan base-package="org.starrier.dreamwar.cache"/>
    <!-- Import Redis Setting-->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

    <!-- Redis Setting -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="105"/>
        <property name="maxIdle" value="10"/>
        <property name="maxWaitMillis" value="5000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!-- Redis Individual Node Database Connect Setting -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="192.168.0.1"/>
        <property name="port" value="6379"/>
        <property name="password" value=""/>
        <property name="poolConfig" value="jedisPoolConfig"/>
    </bean>
    <!-- redisTemplate Setting ,redisTemplate is an extension to the Redis operation of Jedis,with more operations,and encapsulation to make the operation more convenient-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>
</beans>
        <!-- JedisCluster 集群高可用配置 -->
        <!--<bean id="jedisCluster" claredis.propertiesedis.clients.jedis.JedisCluster">
            <constructor-arg index="0">
                <set>
                    <bean claredis.propertiesedis.clients.jedis.HostAndPort">
                        <constructor-arg index="0" valueredis.propertiesedis.ip1}" />
                        <constructor-arg index="1" valueredis.propertiesedis.port1}" type="int" />
                    </bean>
                    <bean claredis.propertiesedis.clients.jedis.HostAndPort">
                        <constructor-arg index="0" valueredis.propertiesedis.ip2}" />
                        <constructor-arg index="1" valueredis.propertiesedis.port2}" type="int" />
                    </bean>
                    <bean claredis.propertiesedis.clients.jedis.HostAndPort">
                        <constructor-arg index="0" valueredis.propertiesedis.ip3}" />
                        <constructor-arg index="1" valueredis.propertiesedis.port3}" type="int" />
                    </bean>
                    <bean claredis.propertiesedis.clients.jedis.HostAndPort">
                        <constructor-arg index="0" valueredis.propertiesedis.ip4}" />
                        <constructor-arg index="1" valueredis.propertiesedis.port4}" type="int" />
                    </bean>
                    <bean claredis.propertiesedis.clients.jedis.HostAndPort">
                        <constructor-arg index="0" valueredis.propertiesedis.ip5}" />
                        <constructor-arg index="1" valueredis.propertiesedis.port5}" type="int" />
                    </bean>
                    <bean claredis.propertiesedis.clients.jedis.HostAndPort">
                        <constructor-arg index="0" valueredis.propertiesedis.ip6}" />
                        <constructor-arg index="1" valueredis.propertiesedis.port6}" type="int" />
                    </bean>
                </set>
            </constructor-arg>
            <constructor-arg index="1" value="2000" type="int"></constructor-arg>
            <constructor-arg index="2" value="100" type="int"></constructor-arg>
            <constructor-arg index="3" ref="jedisPoolConfig"></constructor-arg>
        </bean>-->

        <!--redis.propertiesedis Sentinel主从高可用方案配置 -->
        <!-- <bean id="sentinelConfiguration" class="org.springframework.dredis.propertiesedis.connection.RedisSentinelConfiguration">
            <property name="master">
                <bean class="org.springframework.dredis.propertiesedis.connection.RedisNode">
                    <property name="name" value="master-1"></property>
                </bean>
            </property>
            <property name="sentinels">
                <set>
                    <bean class="org.springframework.dredis.propertiesedis.connection.RedisNode">
                        <constructor-arg name="host" value="${sentinel1.ip}"></constructor-arg>
                        <constructor-arg name="port" value="${sentinel1.port}"></constructor-arg>
                    </bean>
                    <bean class="org.springframework.dredis.propertiesedis.connection.RedisNode">
                        <constructor-arg name="host" value="${sentinel2.ip}"></constructor-arg>
                        <constructor-arg name="port" value="${sentinel2.port}"></constructor-arg>
                    </bean>
                    <bean class="org.springframework.dredis.propertiesedis.connection.RedisNode">
                        <constructor-arg name="host" value="${sentinel3.ip}"></constructor-arg>
                        <constructor-arg name="port" value="${sentinel3.port}"></constructor-arg>
                    </bean>
                </set>
            </property>
        </bean>
        <bean id="jedisConnectionFactory" class="org.springframework.dredis.propertiesedis.connection.jedis.JedisConnectionFactory" p:use-pool="true">
            <property name="password" valueredis.propertiesedis.pass}" />
            <property name="poolConfig">
                <ref bean="jedisPoolConfig" />
            </property>
            <constructor-arg name="sentinelConfig" ref="sentinelConfiguration" />
        </bean> -->
